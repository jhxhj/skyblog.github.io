<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>skyj</title>
  
  <subtitle>Ops Developer &amp; Framework Designer</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://blog.99408.com/"/>
  <updated>2020-05-27T06:48:04.827Z</updated>
  <id>http://blog.99408.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>ELK安装</title>
    <link href="http://blog.99408.com/2020/05/26/test/"/>
    <id>http://blog.99408.com/2020/05/26/test/</id>
    <published>2020-05-26T10:38:00.000Z</published>
    <updated>2020-05-27T06:48:04.827Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/pasted-3.png" alt="upload successful" /></p><p><img src="/images/pasted-8.png" alt="upload successful" /><br />1.安装环境</p><p>1.1安装elasticsearch,kibana,logstash<br />yum install java -y<br />wget <a href="https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-6.2.4.rpm" target="_blank" rel="noopener">https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-6.2.4.rpm</a><br />wget <a href="https://artifacts.elastic.co/downloads/logstash/logstash-6.2.4.rpm" target="_blank" rel="noopener">https://artifacts.elastic.co/downloads/logstash/logstash-6.2.4.rpm</a><br />rpm -ivh logstash-6.2.4.rpm<br />rpm -ivh kibana-6.2.4-x86_64.rpm<br />rpm -ivh logstash-6.2.4.rpm</p><p>编辑配置文件  因为是集群，所有三台都需要安装ES，配置里名字不相同，xpack开始可以先不启用。<br />vi /etc/elasticsearch/elasticsearch.yml</p><p><a href="http://cluster.name" target="_blank" rel="noopener">cluster.name</a>: jj-cluster<br /><a href="http://node.name" target="_blank" rel="noopener">node.name</a>: jjmaster-node<br />#<a href="http://node.name" target="_blank" rel="noopener">node.name</a>: 192.168.147.82<br />node.master: true<br />node.data: false<br />network.host: jjmaster-node<br />#network.host: 192.168.147.82<br />http.port: 9200<br />discovery.zen.ping.unicast.hosts: [“192.168.147.82”, “192.168.147.125”, “192.168.147.110”]<br />path.repo: [&quot;/jjdata/bak&quot;]<br />bootstrap.system_call_filter: false<br />xpack.security.enabled: true<br />xpack.security.transport.ssl.enabled: true<br />xpack.security.transport.ssl.verification_mode: certificate<br />xpack.security.transport.ssl.keystore.path: certs/elastic-certificates.p12<br />xpack.security.transport.ssl.truststore.path: certs/elastic-certificates.p12<br />xpack.notification.email.account:<br />exchange_account:<br />profile: outlook<br />email_defaults:<br />from: <a href="mailto:jh@163.com">jh@163.com</a><br />smtp:<br />auth: true<br />starttls.enable: false<br />host: <a href="http://smtp.163.com" target="_blank" rel="noopener">smtp.163.com</a><br />port: 25<br />user: <a href="mailto:jh@163.com">jh@163.com</a><br />password: Jj</p><p>证书存放位置<br />/etc/elasticsearch/certs/elastic-certificates.p12<br />/usr/share/elasticsearch/certs/elastic-certificates.p12</p><p>vi  /etc/security/limits.conf（配置了memory_lock需要增加二个无限）<br />elk       soft    nofile          819200<br />elk       hard    nofile          819200<br />elk       soft    memlock        unlimited<br />elk       hard    memlock        unlimited</p><p>echo ‘ulimit -SHn 65536’ &gt;&gt; /etc/profile（如有此项的要删除或是改大）</p><p>vi /etc/sysctl.conf<br />vm.max_map_count=262144<br />sysctl -p</p><p>vi /etc/security/limits.d/90-nproc.conf</p><p>*          soft    nproc     1024  <br />修改为：  <br />*          soft    nproc     2048</p><p>修改JVM.OPTIONS默认内容容量（默认2G）</p><p>-Xms256m<br />-Xmx256m</p><p>创建运行帐号（此步为TAR包安装，es不能使用root帐号启动，如果是rpm安装可以忽略<br />[root@elk bin]# useradd elk<br />[root@elk bin]# passwd elk</p><p>[root@elk app]# chown elk:elk elasticsearch-5.5.2 -R<br />[root@elk app]# mkdir /jjdata/bak （备份目录二种安装方式都需要）<br />[root@elk app]# chown elk:elk /jjhdata/bak -R</p><p>su - elk -c /jjhdata/app/elasticsearch-5.5.2/bin/elasticsearch<br />执行进行测试</p><p>安装x-pack<br />./elasticsearch-plugin install x-pack<br />修改默认账户信息<br />• Elasticsearch 的默认账户为 elastic 默认密码为 changme<br />curl -XPUT -u elastic ‘<a href="http://localhost:9200/_xpack/security/user/elastic/_password" target="_blank" rel="noopener">http://localhost:9200/_xpack/security/user/elastic/_password</a>’ -d '{<br />“password” : “yourpasswd”<br />}'s<br />curl -XPUT -u elastic ‘<a href="http://localhost:9200/_xpack/security/user/kibana/_password" target="_blank" rel="noopener">http://localhost:9200/_xpack/security/user/kibana/_password</a>’ -d '{<br />“password” : “yourpasswd”</p><p>执行测试x-pack是否正常<br />curl -XGET -u elastic:changeme <a href="http://192.168.147.82:9200/" target="_blank" rel="noopener">http://192.168.147.82:9200/</a></p><p>其中x-pack是商用版本可以申请试用，或是免费基本1年的，又或是得参考网上CC</p><p>将编辑好的license.json文件放到服务器，在文件目录下执行：<br />[root@localhost Downloads]#curl -XPUT -u elastic:changeme   ‘<a href="http://192.168.147.82:9200/_xpack/license" target="_blank" rel="noopener">http://192.168.147.82:9200/_xpack/license</a>’ -d @license.json<br />或者下面：<br />[root@localhost Downloads]#curl -XPUT -u elastic:changeme ‘<a href="http://192.168.147.82:9200/_xpack/license?acknowledge=true" target="_blank" rel="noopener">http://192.168.147.82:9200/_xpack/license?acknowledge=true</a>’ -d @license.json</p><p>curl -XPUT -u elastic:changeme ‘<a href="http://192.168.147.82:9200/_xpack/license?acknowledge=true" target="_blank" rel="noopener">http://192.168.147.82:9200/_xpack/license?acknowledge=true</a>’ -d @xing-489611f8-974f-4650-b828-51d9cddcce29-v5.json<br />重启elasticsearch和kibana .<br />查看当前的license</p><p>[root@localhost Downloads]# curl -XGET -u elastic:changeme ‘<a href="http://192.168.147.82:9200/_license" target="_blank" rel="noopener">http://192.168.147.82:9200/_license</a>’</p><p>1.2<br />设置kibana<br />elasticsearch.url: “<a href="http://192.168.176.82:9200" target="_blank" rel="noopener">http://192.168.176.82:9200</a>”<br />elasticsearch.username: “kibana”<br />elasticsearch.password: “jjdd”<br />tilemap.url: ‘<a href="http://webrd02.is.autonavi.com/appmaptile?lang=zh_cn&amp;size=1&amp;scale=1&amp;style=7&amp;x=%7Bx%7D&amp;y=%7By%7D&amp;z=%7Bz%7D" target="_blank" rel="noopener">http://webrd02.is.autonavi.com/appmaptile?lang=zh_cn&amp;size=1&amp;scale=1&amp;style=7&amp;x={x}&amp;y={y}&amp;z={z}</a>’ #地图使用</p><p>破解X-PACK<br />cd /usr/share/kibana/plugins/x-pack/<br />修改<br />_xpack_info.js<br />删除/usr/share/kibana/optimize/<br />启动<br />service kibana start<br />登录帐号密码<br />elastic:changeme<br />登录后可以修改密码，修改kibana密码后需要在kibana 配置文件里修改<br />安装nginx<br />nginx.conf</p><p>worker_processes  auto;<br />events {<br />worker_connections  1024;<br />}<br />http {<br />include       mime.types;<br />default_type  application/octet-stream;<br />sendfile        on;<br />keepalive_timeout  65;<br />server {<br />listen 8080;<br />server_name <a href="http://elk.test.com" target="_blank" rel="noopener">elk.test.com</a>;<br />location / {<br />proxy_pass <a href="http://elk.test.com:5601" target="_blank" rel="noopener">http://elk.test.com:5601</a>;<br />proxy_http_version 1.1;<br />proxy_set_header Upgrade $http_upgrade;<br />proxy_set_header Connection ‘upgrade’;<br />proxy_set_header Host $host;<br />proxy_cache_bypass <span class='katex-error' title='ParseError: KaTeX parse error: Expected &#039;EOF&#039;, got &#039;}&#039; at position 21: …upgrade;      }̲  }  server {…'>http_upgrade;      }  }  server {          listen       443 ssl;          server_name elk.test.com;          ssl on;          ssl_certificate /usr/local/nginx/test.crt;          ssl_certificate_key /usr/local/nginx/test.key;          ssl_ciphers ECDH:AESGCM:HIGH:!RC4:!DH:!MD5:!aNULL:!eNULL;          ssl_protocols TLSv1 TLSv1.1 TLSv1.2;          ssl_prefer_server_ciphers on;          ssl_session_timeout 5m;          ssl_session_cache builtin:1000 shared:SSL:10m;          resolver 8.8.4.4 8.8.8.8 valid=300s;          resolver_timeout 10s;          add_header Strict-Transport-Security max-age=63072000;          add_header X-Content-Type-Options nosniff;          server_tokens off;          location ~\.htc(</span>|/){<br />return 404;<br />}<br />location ~ ^(.*)/.svn/{<br />return 404;<br />}</p><pre><code>location / {      proxy_pass http://elk.test.com:5601;      proxy_http_version 1.1;      proxy_set_header Upgrade $http_upgrade;      proxy_set_header Connection 'upgrade';      proxy_set_header Host $host;      proxy_cache_bypass $http_upgrade;  }  </code></pre><p>}<br />}<br />启动，开启防火墙端口，打开测试</p><p>三，<br />安装redis<br />wget <a href="http://download.redis.io/releases/redis-3.2.5.tar.gz" target="_blank" rel="noopener">http://download.redis.io/releases/redis-3.2.5.tar.gz</a><br />tar zxvf redis-3.2.5.tar.gz<br />cd redis-3.2.5<br />yum -y install tcl ruby tree gcc gcc-c++<br />make<br />make MALLOC=libc(如有这样的错误error: jemalloc/jemalloc.h: No such fileor directory执行）<br />make test</p><p>mkdir /data/redis/conf /data/redis/log /data/redis/data<br />make PREFIX=/data/redis/ install<br />通过vim命令修改<br />daemonize yes  介个是设置服务在后台运行</p><p>2、执行./utils/install_server.sh配置Redis配置之后Redis能随系统启动。</p><p>vi /etc/logstash/conf.d/logstash_nginx.conf<br />input {<br />file {<br />path =&gt; [&quot;/usr/local/nginx/logs/access.log&quot;]<br />type =&gt; “nginx_log”<br />start_position =&gt; “beginning”<br />}<br />}<br />output {<br />redis {<br />host =&gt; “192.168.2.221”<br />key =&gt; ‘logstash-redis’<br />data_type =&gt; ‘channel’     #此处的配置类型要与取redis的数据类型对应 ，一般为list<br />}<br />}<br />在redis服务器上执行<br />redis-cli<br />127.0.0.1:6379&gt; SUBSCRIBE logstash-redis<br />查看是否收集到nginx日志<br />正常后修改data_type插入到redis中</p><p>四、安装配置logstash<br />vi /etc/logstash/logstash.yml</p><p>xpack.monitoring.enabled: true<br />xpack.monitoring.elasticsearch.url: [“<a href="http://192.168.147.82:9200" target="_blank" rel="noopener">http://192.168.147.82:9200</a>”]<br />xpack.monitoring.elasticsearch.username: “logstash”<br />xpack.monitoring.elasticsearch.password: “//jjdf”</p><p>cd /usr/share/logstash/<br />ln -s /etc/logstash ./config<br />./system-install /etc/logstash/startup.options sysv<br />echo ‘export “PATH=/usr/share/logstash/bin:$PATH”’ &gt; /etc/profile.d/logstash.sh<br />source /etc/profile.d/logstash.sh</p><p>logstash -e 'input { stdin { } } output { stdout {codec=&gt;rubydebug} }'测试</p><p>mkdir /etc/logstash/patterns</p><p>安装 x-pack插件（如不装插件无法进行连接）<br />/etc/logstash/conf.d/放导入配置文件</p><p>添加权限用户，kibana添加用户需要先添加role，网页里添加时不能添加.kibana索引的权限，在加任何一个通过kibana查看的用户都需要具体.kibana的权限才可以查看。<br />curl -XPOST -u elastic ‘<a href="http://elk.test.com:9200/_xpack/security/role/kibana_guest" target="_blank" rel="noopener">elk.test.com:9200/_xpack/security/role/kibana_guest</a>’ -d ‘{<br />“indices” : [<br />{<br />“names” : [ “.kibana*” ],<br />“privileges” : [ “manage”, “read”, “index” ]<br />}<br />]<br />}’</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/images/pasted-3.png&quot; alt=&quot;upload successful&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/pasted-8.png&quot; alt=&quot;upload successful&quot; /&gt;&lt;br /&gt;
1.安装环境
      
    
    </summary>
    
    
      <category term="ELK" scheme="http://blog.99408.com/categories/ELK/"/>
    
    
      <category term="ELK" scheme="http://blog.99408.com/tags/ELK/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://blog.99408.com/2020/05/26/hello-world/"/>
    <id>http://blog.99408.com/2020/05/26/hello-world/</id>
    <published>2020-05-26T02:44:41.361Z</published>
    <updated>2020-05-26T02:44:41.361Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="quick-start"><a class="markdownIt-Anchor" href="#quick-start"></a> Quick Start</h2><h3 id="create-a-new-post"><a class="markdownIt-Anchor" href="#create-a-new-post"></a> Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="run-server"><a class="markdownIt-Anchor" href="#run-server"></a> Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="generate-static-files"><a class="markdownIt-Anchor" href="#generate-static-files"></a> Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="deploy-to-remote-sites"><a class="markdownIt-Anchor" href="#deploy-to-remote-sites"></a> Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
