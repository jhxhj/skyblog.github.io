{"meta":{"title":"skyj","subtitle":"Ops Developer & Framework Designer","description":"","author":"John Doe","url":"http://blog.99408.com","root":"/"},"pages":[{"title":"404 Not Found：该页无法显示","date":"2020-05-26T06:33:02.341Z","updated":"2020-05-26T06:33:02.341Z","comments":false,"path":"/404.html","permalink":"http://blog.99408.com/404.html","excerpt":"","text":""},{"title":"关于","date":"2020-05-26T06:33:02.342Z","updated":"2020-05-26T06:33:02.342Z","comments":false,"path":"about/index.html","permalink":"http://blog.99408.com/about/index.html","excerpt":"","text":"个人详细介绍"},{"title":"书单","date":"2020-05-26T06:23:41.687Z","updated":"2020-05-26T06:23:41.687Z","comments":false,"path":"books/index.html","permalink":"http://blog.99408.com/books/index.html","excerpt":"","text":""},{"title":"分类","date":"2020-05-27T03:28:33.000Z","updated":"2020-05-27T03:28:45.745Z","comments":false,"path":"categories/index.html","permalink":"http://blog.99408.com/categories/index.html","excerpt":"","text":"个人"},{"title":"友情链接","date":"2020-05-26T06:33:05.382Z","updated":"2020-05-26T06:33:05.382Z","comments":true,"path":"links/index.html","permalink":"http://blog.99408.com/links/index.html","excerpt":"","text":""},{"title":"Repositories","date":"2020-05-26T09:12:37.594Z","updated":"2020-05-26T09:12:37.594Z","comments":false,"path":"repository/index.html","permalink":"http://blog.99408.com/repository/index.html","excerpt":"","text":""},{"title":"run shell test","date":"2020-05-27T03:26:57.000Z","updated":"2020-05-27T03:26:57.609Z","comments":true,"path":"run-shell-test/index.html","permalink":"http://blog.99408.com/run-shell-test/index.html","excerpt":"","text":""},{"title":"run test","date":"2020-05-27T03:26:49.000Z","updated":"2020-05-27T04:13:37.267Z","comments":true,"path":"run-test/index.html","permalink":"http://blog.99408.com/run-test/index.html","excerpt":"","text":""},{"title":"标签","date":"2020-05-27T04:14:20.000Z","updated":"2020-05-27T04:14:20.220Z","comments":false,"path":"tags/index.html","permalink":"http://blog.99408.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"本博使用主题pure修改","slug":"本博使用主题pure修改","date":"2020-06-03T01:55:00.000Z","updated":"2020-06-03T02:13:35.098Z","comments":true,"path":"2020/06/03/本博使用主题pure修改/","link":"","permalink":"http://blog.99408.com/2020/06/03/%E6%9C%AC%E5%8D%9A%E4%BD%BF%E7%94%A8%E4%B8%BB%E9%A2%98pure%E4%BF%AE%E6%94%B9/","excerpt":"","text":"配置文件说明 在 Hexo 中有两份主要的配置文件，其名称都是 _config.yml。 其中，一份位于站点根目录下，主要包含 Hexo 本身的配置；另一份位于主题目录下，这份配置由主题作者提供，主要用于配置主题相关的选项。 为了描述方便，在以下说明中，将前者称为站点配置文件， 后者称为主题配置文件。 启用pure主题 安装主题 git clone https://github.com/cofess/hexo-theme-pure.git themes/pure 打开站点配置文件，找到theme字段，将其值更改为 pure。 theme: next 更新主题 cd themes/pure git pull 到此，主题安装完成。然后启动Hexo服务验证主题是否正确启用。 hexo s 使用浏览器访问 http://localhost:4000 ，检查主题是否被启用。 主题设定 设置语言 打开站点配置文件, 将 language 设置成你所需要的语言。建议明确设置你所需要的语言,可选值对应themes\\pure\\languages目录下语言文件，简体中文配置如下： language: zh-CN 设置个人信息 头像在themes\\pure\\source\\images 目录下替换图片即可，捐献的二维码同理。 个人信息大部分都在 主题配置文件 中设置 设置菜单 右边导航菜单在主题配置文件中配置 导航菜单 123456789menu: Home: . Archives: archives # 归档 Categories: categories # 分类 Tags: tags # 标签 Repository: repository # github repositories Books: books # 书单 Links: links # 友链 About: about # 关于 导航菜单图标（font awesome） menu_icons: enable: true # 是否启用菜单图标 home: fa-dashboard archives: fa-delicious categories: fa-folder tags: fa-tags repository: fa-code books: fa-leanpub links: fa-gg about: fa-coffee 添加背景动画 背景动画基于canvas，在\\themes\\pure\\layout\\layout.ejs的中面添加 &lt;script type=&quot;text/javascript&quot; src=&quot;//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js&quot;&gt; &lt;/script&gt; 站点建立时间 这个时间将在站点的底部显示，例如 © 2017。 编辑 主题配置文件，新增字段 since。 配置示例： since: 2017 添加404公益页面 GitHub Pages有提供制作404页面的指引：Custom 404 Pages。 但是自定义404页面仅对绑定顶级域名的项目才起作用，GitHub默认分配的二级域名是不起作用的，使用hexo server在本机调试也是不起作用的。 使用方法：新建 404.html 页面，放到主题的 source 目录下，内容如下： 123456789101112131415161718192021&lt;!DOCTYPE HTML&gt;&lt;html&gt;&lt;head&gt; &lt;meta http-equiv&#x3D;&quot;content-type&quot; content&#x3D;&quot;text&#x2F;html;charset&#x3D;utf-8;&quot;&#x2F;&gt; &lt;meta http-equiv&#x3D;&quot;X-UA-Compatible&quot; content&#x3D;&quot;IE&#x3D;edge,chrome&#x3D;1&quot; &#x2F;&gt; &lt;meta name&#x3D;&quot;robots&quot; content&#x3D;&quot;all&quot; &#x2F;&gt; &lt;meta name&#x3D;&quot;robots&quot; content&#x3D;&quot;index,follow&quot;&#x2F;&gt; &lt;link rel&#x3D;&quot;stylesheet&quot; type&#x3D;&quot;text&#x2F;css&quot; href&#x3D;&quot;https:&#x2F;&#x2F;qzone.qq.com&#x2F;gy&#x2F;404&#x2F;style&#x2F;404style.css&quot;&gt;&lt;&#x2F;head&gt;&lt;body&gt; &lt;script type&#x3D;&quot;text&#x2F;plain&quot; src&#x3D;&quot;http:&#x2F;&#x2F;www.qq.com&#x2F;404&#x2F;search_children.js&quot; charset&#x3D;&quot;utf-8&quot; homePageUrl&#x3D;&quot;&#x2F;&quot; homePageName&#x3D;&quot;回到我的主页&quot;&gt; &lt;&#x2F;script&gt; &lt;script src&#x3D;&quot;https:&#x2F;&#x2F;qzone.qq.com&#x2F;gy&#x2F;404&#x2F;data.js&quot; charset&#x3D;&quot;utf-8&quot;&gt;&lt;&#x2F;script&gt; &lt;script src&#x3D;&quot;https:&#x2F;&#x2F;qzone.qq.com&#x2F;gy&#x2F;404&#x2F;page.js&quot; charset&#x3D;&quot;utf-8&quot;&gt;&lt;&#x2F;script&gt;&lt;&#x2F;body&gt;&lt;&#x2F;html&gt;&#96;&#96;&#96; 阅读次数统计 本来想用leancloud来统计，因为不蒜子不能管理相关博文的阅读量，但是配置完leancloud会报错~..~只能选用不蒜子，在主题配置文件 中把busuanzi设置为true即可： pv: busuanzi: enable: true # 不蒜子统计 12345678910111213141516171819常用插件及用法hexo-adminGithub：https:&#x2F;&#x2F;github.com&#x2F;jaredly&#x2F;hexo-admin简介：可以直接在网页端创建、编辑markdown文章内容，并将内容发布到_posts里。最方便的是可以很方便的给文章加标题、分类、打标签。安装和使用：安装这个插件需要升级npm，先升级npm install -g npm然后安装npm install --save hexo-admin配置：在站点配置文件 _config.yml中添加 admin: username: myfavoritename password_hash: be121740bf988b2225a313fa1f107ca1 secret: a secret something 1234567891011121314这个配置可以直接在admin Settings &gt; Setup authentification 页面中输入数据获取，secret是用于产生cookie值的。hexo-douban Github：https:&#x2F;&#x2F;github.com&#x2F;mythsman&#x2F;hexo-douban简介：为博客添加豆瓣书单和豆瓣电影。（不支持分页，数据大网络差有可能出现超时错误）安装：npm install hexo-douban --save配置：在站点配置文件 _config.yml中添加 douban: user: 豆瓣个性域名 book: title: ‘This is my book title’ quote: ‘This is my book quote’ movie: title: ‘This is my movie title’ quote: ‘This is my movie quote’ 1在主题配置文件 中修改menu menu: Home: / Archives: /archives Books: /books #This is your books page Movies: /movies #This is your movies page 1234567891011121314hexo-wordcount Github：https:&#x2F;&#x2F;github.com&#x2F;willin&#x2F;hexo-wordcount简介：为文章添加文章字数统计、文章预计阅读时间安装：npm install hexo-wordcount --save配置：在主题配置文件 中设置为true：# wordcount postCount: enable: true wordcount: true # 文章字数统计 min2read: true # 阅读时长预计 123456789101112hexo-autonofollow Github：https:&#x2F;&#x2F;github.com&#x2F;liuzc&#x2F;hexo-autonofollow简介：自动为站外链接添加nofollow属性安装：npm install hexo-autonofollow --save配置：在站点配置文件_config.yml中添加 nofollow: enable: true exclude: - exclude1.com - exclude2.com enable - 是否启用 exclude - 排除域名 123456789101112hexo-generator-feed Github：https:&#x2F;&#x2F;github.com&#x2F;hexojs&#x2F;hexo-generator-feed简介：RSS的生成插件，你可以在配置显示你站点的RSS，文件路径\\atom.xml。安装：npm install hexo-generator-feed --save配置：在站点配置文件_config.yml中添加 feed: type: atom path: atom.xml limit: 20 hub: content: 123456789101112131415161718type - Feed type. (atom&#x2F;rss2) path - Feed path. (Default: atom.xml&#x2F;rss2.xml) limit - Maximum number of posts in the feed (Use 0 or false to show all posts) hub - URL of the PubSubHubbub hubs (Leave it empty if you don’t use it) content - (optional) set to ‘true’ to include the contents of the entire post in the feed. hexo-generator-sitemap Github：https:&#x2F;&#x2F;github.com&#x2F;hexojs&#x2F;hexo-generator-sitemap简介：生成博客的sitemap。安装：npm install hexo-generator-sitemap --save配置：在站点配置文件_config.yml中添加 sitemap: path: sitemap.xml 123456789101112hexo-generator-baidu-sitemap Github：https:&#x2F;&#x2F;github.com&#x2F;coneycode&#x2F;hexo-generator-baidu-sitemap简介：生成博客的sitemap（针对百度）。安装：install hexo-generator-baidu-sitemap --save配置：在站点配置文件_config.yml中添加 baidusitemap: path: baidusitemap.xml 123456789101112hexo-generator-json-content Github：https:&#x2F;&#x2F;github.com&#x2F;alexbruno&#x2F;hexo-generator-json-content简介：用于生成静态站点数据，提供搜索功能的数据源。安装：npm install hexo-generator-json-content --save配置：在站点配置文件_config.yml中添加 jsonContent: ignore: - path/to/a/page - url/to/one/post - an-entire-category - specific.file - .ext # a file extension 123456789101112hexo-neat Github：https:&#x2F;&#x2F;github.com&#x2F;rozbo&#x2F;hexo-neat简介：自动压缩html、css、js代码安装：npm install hexo-neat --save 配置：在站点配置文件_config.yml中添加 neat_enable: true neat_html: enable: ture exclude: neat_css: enable: true exclude: - ‘.min.css’ neat_js: enable: true mangle: true output: compress: exclude: - '.min.js’ 参考 http://theme-next.iissnan.com/getting-started.html https://github.com/cofess/hexo-theme-pure/blob/master/README.cn.md http://blog.cofess.com/2017/08/16/comon-plugins-and-usage-of-hexo-blog.html","categories":[{"name":"blog","slug":"blog","permalink":"http://blog.99408.com/categories/blog/"}],"tags":[{"name":"blog","slug":"blog","permalink":"http://blog.99408.com/tags/blog/"}],"author":"John Doe"},{"title":"ELK安装","slug":"test","date":"2020-05-26T10:38:00.000Z","updated":"2020-06-03T02:17:24.135Z","comments":true,"path":"2020/05/26/test/","link":"","permalink":"http://blog.99408.com/2020/05/26/test/","excerpt":"","text":"1.安装环境 1.1安装elasticsearch,kibana,logstash yum install java -y wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-6.2.4.rpm wget https://artifacts.elastic.co/downloads/logstash/logstash-6.2.4.rpm rpm -ivh logstash-6.2.4.rpm rpm -ivh kibana-6.2.4-x86_64.rpm rpm -ivh logstash-6.2.4.rpm 编辑配置文件 因为是集群，所有三台都需要安装ES，配置里名字不相同，xpack开始可以先不启用。 vi /etc/elasticsearch/elasticsearch.yml 12345678910111213141516171819202122232425262728cluster.name: jj-cluster node.name: jjmaster-node #node.name: 192.168.147.82 node.master: true node.data: false network.host: jjmaster-node #network.host: 192.168.147.82 http.port: 9200 discovery.zen.ping.unicast.hosts: [&quot;192.168.147.82&quot;, &quot;192.168.147.125&quot;, &quot;192.168.147.110&quot;] path.repo: [&quot;&#x2F;jjdata&#x2F;bak&quot;] bootstrap.system_call_filter: false xpack.security.enabled: true xpack.security.transport.ssl.enabled: true xpack.security.transport.ssl.verification_mode: certificate xpack.security.transport.ssl.keystore.path: certs&#x2F;elastic-certificates.p12 xpack.security.transport.ssl.truststore.path: certs&#x2F;elastic-certificates.p12 xpack.notification.email.account: exchange_account: profile: outlook email_defaults: from: jh@163.com smtp: auth: true starttls.enable: false host: smtp.163.com port: 25 user: jh@163.com password: Jj 证书存放位置 /etc/elasticsearch/certs/elastic-certificates.p12 /usr/share/elasticsearch/certs/elastic-certificates.p12 vi /etc/security/limits.conf（配置了memory_lock需要增加二个无限） 1234elk soft nofile 819200 elk hard nofile 819200elk soft memlock unlimitedelk hard memlock unlimited echo ‘ulimit -SHn 65536’ &gt;&gt; /etc/profile（如有此项的要删除或是改大） vi /etc/sysctl.conf vm.max_map_count=262144 sysctl -p vi /etc/security/limits.d/90-nproc.conf 123* soft nproc 1024 修改为： * soft nproc 2048 修改JVM.OPTIONS默认内容容量（默认2G） -Xms256m -Xmx256m 创建运行帐号（此步为TAR包安装，es不能使用root帐号启动，如果是rpm安装可以忽略 [root@elk bin]# useradd elk [root@elk bin]# passwd elk [root@elk app]# chown elk:elk elasticsearch-5.5.2 -R [root@elk app]# mkdir /jjdata/bak （备份目录二种安装方式都需要） [root@elk app]# chown elk:elk /jjhdata/bak -R su - elk -c /jjhdata/app/elasticsearch-5.5.2/bin/elasticsearch 执行进行测试 安装x-pack ./elasticsearch-plugin install x-pack 修改默认账户信息 • Elasticsearch 的默认账户为 elastic 默认密码为 changme 12345curl -XPUT -u elastic &#39;http:&#x2F;&#x2F;localhost:9200&#x2F;_xpack&#x2F;security&#x2F;user&#x2F;elastic&#x2F;_password&#39; -d &#39;&#123; &quot;password&quot; : &quot;yourpasswd&quot;&#125;&#39;s curl -XPUT -u elastic &#39;http:&#x2F;&#x2F;localhost:9200&#x2F;_xpack&#x2F;security&#x2F;user&#x2F;kibana&#x2F;_password&#39; -d &#39;&#123; &quot;password&quot; : &quot;yourpasswd&quot; 执行测试x-pack是否正常 curl -XGET -u elastic:changeme http://192.168.147.82:9200/ 其中x-pack是商用版本可以申请试用，或是免费基本1年的，又或是得参考网上CC 将编辑好的license.json文件放到服务器，在文件目录下执行： 12345[root@localhost Downloads]#curl -XPUT -u elastic:changeme &#39;http:&#x2F;&#x2F;192.168.147.82:9200&#x2F;_xpack&#x2F;license&#39; -d @license.json 或者下面： [root@localhost Downloads]#curl -XPUT -u elastic:changeme &#39;http:&#x2F;&#x2F;192.168.147.82:9200&#x2F;_xpack&#x2F;license?acknowledge&#x3D;true&#39; -d @license.jsoncurl -XPUT -u elastic:changeme &#39;http:&#x2F;&#x2F;192.168.147.82:9200&#x2F;_xpack&#x2F;license?acknowledge&#x3D;true&#39; -d @xing-489611f8-974f-4650-b828-51d9cddcce29-v5.json 重启elasticsearch和kibana . 查看当前的license [root@localhost Downloads]# curl -XGET -u elastic:changeme ‘http://192.168.147.82:9200/_license’ 1.2 设置kibana 1234elasticsearch.url: &quot;http:&#x2F;&#x2F;192.168.176.82:9200&quot;elasticsearch.username: &quot;kibana&quot; elasticsearch.password: &quot;jjdd&quot; tilemap.url: &#39;http:&#x2F;&#x2F;webrd02.is.autonavi.com&#x2F;appmaptile?lang&#x3D;zh_cn&amp;size&#x3D;1&amp;scale&#x3D;1&amp;style&#x3D;7&amp;x&#x3D;&#123;x&#125;&amp;y&#x3D;&#123;y&#125;&amp;z&#x3D;&#123;z&#125;&#39; #地图使用 破解X-PACK cd /usr/share/kibana/plugins/x-pack/ 修改 _xpack_info.js 删除/usr/share/kibana/optimize/ 启动 service kibana start 登录帐号密码 elastic:changeme 登录后可以修改密码，修改kibana密码后需要在kibana 配置文件里修改 安装nginx nginx.conf 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354worker_processes auto; events &#123; worker_connections 1024; &#125; http &#123; include mime.types; default_type application&#x2F;octet-stream; sendfile on; keepalive_timeout 65; server &#123; listen 8080; server_name elk.test.com; location &#x2F; &#123; proxy_pass http:&#x2F;&#x2F;elk.test.com:5601; proxy_http_version 1.1; proxy_set_header Upgrade $http_upgrade; proxy_set_header Connection &#39;upgrade&#39;; proxy_set_header Host $host; proxy_cache_bypass $http_upgrade; &#125; &#125; server &#123; listen 443 ssl; server_name elk.test.com; ssl on; ssl_certificate &#x2F;usr&#x2F;local&#x2F;nginx&#x2F;test.crt; ssl_certificate_key &#x2F;usr&#x2F;local&#x2F;nginx&#x2F;test.key; ssl_ciphers ECDH:AESGCM:HIGH:!RC4:!DH:!MD5:!aNULL:!eNULL; ssl_protocols TLSv1 TLSv1.1 TLSv1.2; ssl_prefer_server_ciphers on; ssl_session_timeout 5m; ssl_session_cache builtin:1000 shared:SSL:10m; resolver 8.8.4.4 8.8.8.8 valid&#x3D;300s; resolver_timeout 10s; add_header Strict-Transport-Security max-age&#x3D;63072000; add_header X-Content-Type-Options nosniff; server_tokens off; location ~\\.htc($|&#x2F;)&#123; return 404; &#125; location ~ ^(.*)\\&#x2F;\\.svn\\&#x2F;&#123; return 404; &#125; location &#x2F; &#123; proxy_pass http:&#x2F;&#x2F;elk.test.com:5601; proxy_http_version 1.1; proxy_set_header Upgrade $http_upgrade; proxy_set_header Connection &#39;upgrade&#39;; proxy_set_header Host $host; proxy_cache_bypass $http_upgrade; &#125; &#125; &#125; 启动，开启防火墙端口，打开测试 三， 安装redis wget http://download.redis.io/releases/redis-3.2.5.tar.gz tar zxvf redis-3.2.5.tar.gz cd redis-3.2.5 yum -y install tcl ruby tree gcc gcc-c++ make make MALLOC=libc(如有这样的错误error: jemalloc/jemalloc.h: No such fileor directory执行） make test mkdir /data/redis/conf /data/redis/log /data/redis/data make PREFIX=/data/redis/ install 通过vim命令修改 daemonize yes 介个是设置服务在后台运行 2、执行./utils/install_server.sh配置Redis配置之后Redis能随系统启动。 vi /etc/logstash/conf.d/logstash_nginx.conf 1234567891011121314input &#123; file &#123; path &#x3D;&gt; [&quot;&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;logs&#x2F;access.log&quot;] type &#x3D;&gt; &quot;nginx_log&quot; start_position &#x3D;&gt; &quot;beginning&quot; &#125; &#125; output &#123; redis &#123; host &#x3D;&gt; &quot;192.168.2.221&quot; key &#x3D;&gt; &#39;logstash-redis&#39; data_type &#x3D;&gt; &#39;channel&#39; #此处的配置类型要与取redis的数据类型对应 ，一般为list &#125; &#125; 在redis服务器上执行 redis-cli 127.0.0.1:6379&gt; SUBSCRIBE logstash-redis 查看是否收集到nginx日志 正常后修改data_type插入到redis中 四、安装配置logstash vi /etc/logstash/logstash.yml xpack.monitoring.enabled: true xpack.monitoring.elasticsearch.url: [“http://192.168.147.82:9200”] xpack.monitoring.elasticsearch.username: “logstash” xpack.monitoring.elasticsearch.password: “//jjdf” cd /usr/share/logstash/ ln -s /etc/logstash ./config ./system-install /etc/logstash/startup.options sysv echo ‘export “PATH=/usr/share/logstash/bin:$PATH”’ &gt; /etc/profile.d/logstash.sh source /etc/profile.d/logstash.sh logstash -e 'input { stdin { } } output { stdout {codec=&gt;rubydebug} }'测试 mkdir /etc/logstash/patterns 安装 x-pack插件（如不装插件无法进行连接） /etc/logstash/conf.d/放导入配置文件 添加权限用户，kibana添加用户需要先添加role，网页里添加时不能添加.kibana索引的权限，在加任何一个通过kibana查看的用户都需要具体.kibana的权限才可以查看。 12345678curl -XPOST -u elastic &#39;elk.test.com:9200&#x2F;_xpack&#x2F;security&#x2F;role&#x2F;kibana_guest&#39; -d &#39;&#123; &quot;indices&quot; : [ &#123; &quot;names&quot; : [ &quot;.kibana*&quot; ], &quot;privileges&quot; : [ &quot;manage&quot;, &quot;read&quot;, &quot;index&quot; ] &#125; ] &#125;&#39;","categories":[{"name":"ELK","slug":"ELK","permalink":"http://blog.99408.com/categories/ELK/"}],"tags":[{"name":"ELK","slug":"ELK","permalink":"http://blog.99408.com/tags/ELK/"}],"author":"John Doe"},{"title":"Hello World","slug":"hello-world","date":"2020-05-26T02:44:41.361Z","updated":"2020-05-26T02:44:41.361Z","comments":true,"path":"2020/05/26/hello-world/","link":"","permalink":"http://blog.99408.com/2020/05/26/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick Start Create a new post 1$ hexo new \"My New Post\" More info: Writing Run server 1$ hexo server More info: Server Generate static files 1$ hexo generate More info: Generating Deploy to remote sites 1$ hexo deploy More info: Deployment","categories":[],"tags":[]}],"categories":[{"name":"blog","slug":"blog","permalink":"http://blog.99408.com/categories/blog/"},{"name":"ELK","slug":"ELK","permalink":"http://blog.99408.com/categories/ELK/"}],"tags":[{"name":"blog","slug":"blog","permalink":"http://blog.99408.com/tags/blog/"},{"name":"ELK","slug":"ELK","permalink":"http://blog.99408.com/tags/ELK/"}]}